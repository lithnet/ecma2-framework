using System.Collections.ObjectModel;
using System.Security;
using Microsoft.MetadirectoryServices;

namespace Lithnet.Ecma2Framework
{
    public class Ecma2PasswordImplementation : IMAExtensible2Password
    {
        private Ecma2Password provider;

        public Ecma2PasswordImplementation()
        {
            var initializer = Ecma2Bootstrapper.GetInitializer();
            this.provider = new Ecma2Password(initializer);
        }

        void IMAExtensible2Password.OpenPasswordConnection(KeyedCollection<string, ConfigParameter> configParameters, Partition partition)
        {
            AsyncHelper.RunSync(this.provider.OpenPasswordConnectionAsync(configParameters, partition));
        }

        void IMAExtensible2Password.ClosePasswordConnection()
        {
            AsyncHelper.RunSync(this.provider.ClosePasswordConnectionAsync());
        }

        ConnectionSecurityLevel IMAExtensible2Password.GetConnectionSecurityLevel()
        {
            return AsyncHelper.RunSync(this.provider.GetConnectionSecurityLevelAsync());
        }

        void IMAExtensible2Password.SetPassword(CSEntry csentry, SecureString newPassword, PasswordOptions options)
        {
            AsyncHelper.RunSync(this.provider.SetPasswordAsync(csentry, newPassword, options));
        }

        void IMAExtensible2Password.ChangePassword(CSEntry csentry, SecureString oldPassword, SecureString newPassword)
        {
            AsyncHelper.RunSync(this.provider.ChangePasswordAsync(csentry, oldPassword, newPassword));
        }
    }
}